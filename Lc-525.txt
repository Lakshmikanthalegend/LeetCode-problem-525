import java.util.HashMap;

public class MaxLengthEqualSubarray {
    public static int findMaxLength(int[] nums) {
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, -1); // Initialize with sum 0 at index -1
        int maxLength = 0;
        int cumulativeSum = 0;

        for (int i = 0; i < nums.length; i++) {
            // Treat 0 as -1
            cumulativeSum += (nums[i] == 0) ? -1 : 1;

            // Check if this cumulative sum has been seen before
            if (map.containsKey(cumulativeSum)) {
                // Calculate the length of the subarray
                int length = i - map.get(cumulativeSum);
                maxLength = Math.max(maxLength, length);
            } else {
                // Store the index of this cumulative sum
                map.put(cumulativeSum, i);
            }
        }
        
        return maxLength;
    }

    public static void main(String[] args) {
        int[] nums = {0, 1, 0, 1, 0, 1};
        int result = findMaxLength(nums);
        System.out.println("Maximum length of contiguous subarray with equal number of 0s and 1s: " + result);
    }
}